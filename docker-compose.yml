version: "3"

services:
  #Server Nats
  nats-server:
    image: nats:latest
    ports:
      - 8222:8222

  # Order DB
  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ordersdb

  # Client gateway
  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${CLIENT_GATEWAY_PORT}
      - NATS_SERVERS=${NATS_SERVERS}

  # Products microservice
  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PRODUCTS_MICROSERVICE_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=${PRODUCTS_MICROSERVICE_DATABASE_URL}

  # Order Microservice
  orders-ms:
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${ORDERS_MICROSERVICE_PORT}
      - DATABASE_URL=${ORDERS_MICROSERVICE_DATABASE_URL}
      - NATS_SERVERS=${NATS_SERVERS}
    depends_on:
      - orders-db

  # Payments Microservice
  payments-ms:
    build: ./payments-ms
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    ports:
      - ${PAYMENT_MICROSERVICE_PORT}:${PAYMENT_MICROSERVICE_PORT}
    environment:
      - PORT=${PAYMENT_MICROSERVICE_PORT}
      - STRIPE_SECRET_KEY=${PAYMENT_MICROSERVICE_STRIPE_SECRET_KEY}
      - STRIPE_SUCCESS_URL=${PAYMENT_MICROSERVICE_STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${PAYMENT_MICROSERVICE_STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${PAYMENT_MICROSERVICE_STRIPE_ENDPOINT_SECRET}
      - NATS_SERVERS=${NATS_SERVERS}
